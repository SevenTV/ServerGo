name: 7TV Go API Deploy

on:
  push:
    branches: [master]

  workflow_dispatch:

env:
  REGISTRY_REPO: seventv/servergo
  REGISTRTY_IMAGE_NAME: seventv/servergo:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - uses: actions/checkout@v2

      # Build image
      - name: Build Image
        id: build_step
        uses: docker/build-push-action@v2.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          push: true
          tags: ${{ github.sha }}
          outputs: type=docker,dest=/tmp/image.tar

  deploy:
    runs-on: ubuntu-latest
    needs: # Run this after build
      - build

    steps:
        # Checkout repository
        - uses: actions/checkout@v2

        # Deploy to k8s
        - name: Install kubectl&
          uses: azure/setup-kubectl@v1

        - name: Apply Deployment & Rollout
          env:
            KUBE_CONFIG_DATA: ${{ secrets.K8S_CONFIG }}
            KUBE_RESOURCE: statefulsets
            KUBE_IMAGE_PATCH: >-
              [
                { "op": "replace", "path": "/spec/template/spec/containers/0/image", "value": "ghcr.io/${{ env.REGISTRTY_IMAGE_NAME }}" }
              ]
          run: |
            mkdir -p ~/.kube
            (echo $KUBE_CONFIG_DATA | base64 -d) >> ~/.kube/config
            kubectl config use-context 7tv-as-deployer

            kubectl apply -f k8s
            kubectl patch $KUBE_RESOURCE 7tv-goapi --type="json" -p="$KUBE_IMAGE_PATCH"

            kubectl rollout restart -n 7tv sts/7tv-goapi
